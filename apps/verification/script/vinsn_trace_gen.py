# Copyright 2024 ETH Zurich and University of Bologna.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Author: Matteo Perotti, ETH Zurich

import random
import sys

def load_instructions(file_path):
    with open(file_path, 'r') as file:
        instructions = [line.strip() for line in file if line.strip() and not line.strip().startswith('#')]
    return instructions

def generate_random_sequences(instructions, sequence_length, num_sequences):
    sequences = []
    for _ in range(num_sequences):
        XX = random.choice([8, 16, 32, 64])
        Y = random.choice([1, 2, 4, 8])
        initial_instruction = f'vsetvli t0, x0, e{XX}, m{Y}, ta, ma'
        sequence = [initial_instruction] + random.choices(instructions, k=sequence_length - 1)
        sequences.append(sequence)
    return sequences

def write_sequences_to_file(sequences, output_file_path, script_name):
    with open(output_file_path, 'w') as file:
        file.write(f'# This file was auto-generated by {script_name}\n')
        file.write('.text\n')
        for i in range(len(sequences)):
            file.write(f'.global rand_seq_{i}\n')
        file.write('\n')

        for i, sequence in enumerate(sequences):
            file.write(f'rand_seq_{i}:\n')
            for instruction in sequence:
                file.write(f'  {instruction}\n')
            file.write('  ret\n\n')

def write_main_file(num_sequences, output_file_path, script_name):
    with open(output_file_path, 'w') as file:
        file.write(f'// This file was auto-generated by {script_name}\n')
        file.write('#include <stdint.h>\n')
        file.write('#include <string.h>\n\n')
        file.write('#ifndef SPIKE\n')
        file.write('#include "printf.h"\n')
        file.write('#else\n')
        file.write('#include "util.h"\n')
        file.write('#include <stdio.h>\n')
        file.write('#endif\n\n')

        for i in range(num_sequences):
            file.write(f'void rand_seq_{i}();\n')
        file.write('\n')
        file.write('int main() {\n')
        for i in range(num_sequences):
            file.write(f'  printf("Rand Seq {i}\\n");\n')
            file.write(f'  rand_seq_{i}();\n\n')
        file.write('  printf("Program end\\n");\n\n')
        file.write('  return 0;\n')
        file.write('}\n')

def main():
    if len(sys.argv) != 6:
        print("Usage: python generate_sequences.py <input_file> <output_seq_file> <sequence_length> <num_sequences> <output_main_file>")
        sys.exit(1)

    input_file_path = sys.argv[1]
    output_seq_file_path = sys.argv[2]
    sequence_length = int(sys.argv[3])
    num_sequences = int(sys.argv[4])
    output_main_file_path = sys.argv[5]

    instructions = load_instructions(input_file_path)
    sequences = generate_random_sequences(instructions, sequence_length, num_sequences)
    script_name = sys.argv[0]
    write_sequences_to_file(sequences, output_seq_file_path, script_name)
    write_main_file(num_sequences, output_main_file_path, script_name)
    print(f'{num_sequences} random sequences of length {sequence_length} have been written to {output_seq_file_path}')
    print(f'Main file written to {output_main_file_path}')

if __name__ == '__main__':
    main()
